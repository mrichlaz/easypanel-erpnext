services:
  # --- CORE SERVICES ---
  db:
    platform: "linux/arm64"
    image: mariadb:11.4
    restart: on-failure
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 80s
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
    environment:
      MYSQL_ROOT_PASSWORD: admin
    volumes:
      - db-data:/var/lib/mysql

  redis-cache:
    platform: "linux/arm64"
    image: redis:7-alpine
    restart: on-failure
    command: ["redis-server", "--appendonly", "yes", "--maxmemory", "256mb", "--maxmemory-policy", "allkeys-lru"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - redis-cache-data:/data

  redis-queue:
    platform: "linux/arm64"
    image: redis:7-alpine
    restart: on-failure
    command: ["redis-server", "--appendonly", "yes", "--maxmemory", "256mb", "--maxmemory-policy", "allkeys-lru"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - redis-queue-data:/data

  # --- SETUP SERVICES (Run Once) ---
  configurator:
    platform: "linux/arm64"
    image: frappe/erpnext:latest
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
      redis-cache:
        condition: service_healthy
      redis-queue:
        condition: service_healthy
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    entrypoint:
      - bash
      - -c
    command:
      - >
        echo "Starting configuration...";
        ls -1 apps > sites/apps.txt;
        bench set-config -g db_host $DB_HOST;
        bench set-config -gp db_port $DB_PORT;
        bench set-config -g redis_cache "redis://$REDIS_CACHE";
        bench set-config -g redis_queue "redis://$REDIS_QUEUE";
        bench set-config -g redis_socketio "redis://$REDIS_QUEUE";
        bench set-config -gp socketio_port $SOCKETIO_PORT;
        echo "Configuration complete!";
    environment:
      DB_HOST: db
      DB_PORT: "3306"
      REDIS_CACHE: redis-cache:6379
      REDIS_QUEUE: redis-queue:6379
      SOCKETIO_PORT: "9000"

  create-site:
    platform: "linux/arm64"
    image: frappe/erpnext:latest
    restart: "no"
    depends_on:
      configurator:
        condition: service_completed_successfully
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs
    entrypoint:
      - bash
      - -c
    command:
      - >
        wait-for-it -t 120 db:3306;
        wait-for-it -t 60 redis-cache:6379;
        wait-for-it -t 60 redis-queue:6379;
        if [ ! -d "sites/frappe.local" ]; then
          echo "Creating new site frappe.local...";
          bench new-site frappe.local --mariadb-root-username root --mariadb-root-password admin --admin-password admin --install-app erpnext --set-default;
          echo "Enabling scheduler...";
          bench --site frappe.local scheduler enable;
          bench --site frappe.local scheduler status;
        else
          echo "Site frappe.local already exists, skipping creation...";
          bench --site frappe.local scheduler enable;
          bench --site frappe.local scheduler status;
          bench --site frappe.local clear-cache;
        fi

  # --- APPLICATION SERVICES ---
  backend:
    platform: "linux/arm64"
    image: frappe/erpnext:latest
    depends_on:
      create-site:
        condition: service_completed_successfully
    restart: on-failure
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  frontend:
    platform: "linux/arm64"
    image: frappe/erpnext:latest
    depends_on:
      - backend
      - websocket
    restart: on-failure
    command:
      - nginx-entrypoint.sh
    environment:
      BACKEND: backend:8000
      FRAPPE_SITE_NAME_HEADER: frappe.local
      SOCKETIO: websocket:9000
      UPSTREAM_REAL_IP_ADDRESS: 127.0.0.1
      UPSTREAM_REAL_IP_HEADER: X-Forwarded-For
      UPSTREAM_REAL_IP_RECURSIVE: "off"
      PROXY_READ_TIMEOUT: 120
      CLIENT_MAX_BODY_SIZE: 50m
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  websocket:
    platform: "linux/arm64"
    image: frappe/erpnext:latest
    depends_on:
      create-site:
        condition: service_completed_successfully
      redis-queue:
        condition: service_healthy
    restart: on-failure
    # --- CHANGE IS HERE ---
    entrypoint:
      - bash
      - -c
    command:
      - >
        echo "Waiting for redis-queue to be ready..." &&
        wait-for-it -t 60 redis-queue:6379 --strict -- &&
        echo "Redis is ready, starting websocket service..." &&
        node /home/frappe/frappe-bench/apps/frappe/socketio.js
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  scheduler:
    platform: "linux/arm64"
    image: frappe/erpnext:latest
    depends_on:
      create-site:
        condition: service_completed_successfully
    restart: on-failure
    command:
      - bench
      - schedule
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  queue-long:
    platform: "linux/arm64"
    image: frappe/erpnext:latest
    depends_on:
      create-site:
        condition: service_completed_successfully
    restart: on-failure
    command:
      - bench
      - worker
      - --queue
      - long,default,short
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

  queue-short:
    platform: "linux/arm64"
    image: frappe/erpnext:latest
    depends_on:
      create-site:
        condition: service_completed_successfully
    restart: on-failure
    command:
      - bench
      - worker
      - --queue
      - short,default
    volumes:
      - sites:/home/frappe/frappe-bench/sites
      - logs:/home/frappe/frappe-bench/logs

volumes:
  db-data:
  redis-queue-data:
  redis-cache-data:
  sites:
  logs:
